- name: "Fetch details about bespin-deploy service account"
  command: kubectl get serviceaccount bespin-deploy -o json
  register: bespin_deploy_info

- set_fact:
    service_account_details: "{{ bespin_deploy_info['stdout'] }}"

- name: Fetch details about bespin-deploy service account secret
  command: >
    kubectl get secret
    "{{ service_account_details['secrets'][0]['name'] }}"
    -o json
  register: bespin_deploy_secret_info

- set_fact:
    service_account_secret_details: "{{ bespin_deploy_secret_info['stdout'] }}"

- set_fact:
    gcloud_k8s_token: "{{ service_account_secret_details['data']['token'] | b64decode }}"

- name: Fetch details about cluster so we can determine the hostname
  command: kubectl get endpoints kubernetes --output=jsonpath={.subsets[0].addresses[0].ip}
  register: kubectl_endpoints_info

- set_fact:
    gcloud_k8s_host: "https://{{ kubectl_endpoints_info['stdout'] }}"

- name: Get name of the current kubectl context
  command: kubectl config current-context
  register: kubectl_current_context

- name: Get cluster certificate authority data
  command: >
    kubectl config view --raw -o
    "jsonpath='{.clusters[?(@.name == \"{{ kubectl_current_context.stdout }}\")].cluster.certificate-authority-data}'"
  register: kubectl_current_context

- name: create temp file to hold certificate authority data
  tempfile:
    state: file
    suffix: ca
  register: temp_ca_file

- set_fact:
    gcloud_k8s_ca_path: "{{ temp_ca_file.path }}"

- name: "Write certificate authority data to temp file: gcloud_k8s_ca_path"
  copy: content="{{ kubectl_current_context.stdout | b64decode }}" dest="{{ gcloud_k8s_ca_path }}"

- set_fact:
    gcloud_k8s_env:
        K8S_AUTH_API_KEY: "{{ gcloud_k8s_token }}"
        K8S_AUTH_HOST: "{{ gcloud_k8s_host }}"
        K8S_AUTH_SSL_CA_CERT  : "{{ gcloud_k8s_ca_path }}"
