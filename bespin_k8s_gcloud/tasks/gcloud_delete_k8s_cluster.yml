- name: "Connecting to google cloud project {{ gcloud_project_id }}"
  command: gcloud config set project "{{ gcloud_project_id }}"

- name: "Check if a cluster exists with the name {{ cluster_name }} "
  command: >
    gcloud container clusters list
    --format="value(name)"
    "--filter=name={{ cluster_name }}"
    "--zone={{ gcloud_compute_zone }}"
  register: find_cluster_result

- name: Lookup the system-data Persistent volume name so we can wait for it to be deleted
  command: >
    kubectl
    "--namespace={{ namespace_name }}"
    get pvc system-data -o=jsonpath='{.spec.volumeName}'
  register: system_data_volume
  ignore_errors: True
  when: find_cluster_result.stdout != ""

- name: "Delete system data pvc"
  command:
    kubectl
    "--namespace={{ namespace_name }}"
    delete pvc system-data
  register: system_data_pvc_delete_result
  when: find_cluster_result.stdout != "" and system_data_volume.stdout != ""

- name: "Waiting for k8s cluster to cleanup pv associated with pvc"
  pause:
    seconds: 2
  when: not system_data_pvc_delete_result.skipped

- name: "Delete k8s cluster {{ cluster_name }} in zone {{ gcloud_compute_zone }}"
  command: >
    gcloud container clusters delete -q
    "{{ cluster_name }}"
    --zone "{{ gcloud_compute_zone }}"
  when: find_cluster_result.stdout != ""