- name: Create network
  gcp_compute_network:
    name: rnaseq-network
    project: "{{ gcp_project_id }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_service_account_file }}"
    state: "{{ gcp_state }}"
  register: network

- name: Allow SSH access
  gcp_compute_firewall:
    name: rnaseq-firewall
    allowed:
    - ip_protocol: tcp
      ports:
      - '22'
    project: "{{ gcp_project_id }}"
    network: "{{ network }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_service_account_file }}"
    state: "{{ gcp_state }}"
  register: firewall

# TODO: Do this for a fleet
- name: Create Network Addresses
  gcp_compute_address:
    name: "address-{{ item }}"
    region: us-central1
    project: "{{ gcp_project_id }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_service_account_file }}"
    state: "{{ gcp_state }}"
  register: addresses
  loop: "{{ gcp_rnaseq_vms }}"


- name: Create Instances
  gcp_compute_instance:
    name: "rnaseq-{{ item }}"
    machine_type: "{{ gcp_machine_type }}"
    metadata:
      ssh-keys: "{{ gcp_ssh_user }}:{{ gcp_ssh_key }}"
    disks:
    - auto_delete: yes
      boot: yes
      initialize_params:
        disk_size_gb: 25
        source_image: "{{ gcp_image_name }}"
    network_interfaces:
    - network: "{{ network }}"
      access_configs:
      - name: External NAT
        nat_ip: "{{ addresses.results[loop_idx] }}"
        type: ONE_TO_ONE_NAT
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project_id }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_service_account_file }}"
    state: "{{ gcp_state }}"
  register: instances
  loop: "{{ gcp_rnaseq_vms }}"
  loop_control:
    index_var: loop_idx

- name: Wait for SSH to come up
  wait_for: host={{ addresses.results[loop_idx].address }} port=22 delay=10 timeout=60
  loop: "{{ gcp_rnaseq_vms }}"
  loop_control:
    index_var: loop_idx
  when: gcp_state == "present"

- name: Add hosts to in-memory inventory and assign users
  add_host:
    name: "{{ item.address }}"
    groupname: rnaseq-workshop-gcloud
    workshop_user: "{{ gcp_rnaseq_vms[loop_idx]}}"
  loop: "{{ addresses.results }}"
  loop_control:
    index_var: loop_idx
  when: gcp_state == "present"

# TODO mount storage

# TODO: Instance templates?
