---
# file: roles/jupyter/tasks/main.yml
# requires python3

####################################
# Install base dependencies
####################################


- name: Install Python 3, Node, and NPM
  apt: name={{item}} state=present update_cache=yes
  with_items:
  - python3
  - python3
  - python3-setuptools
  - python3-dev
  - python3-pip
  - sudo
  - npm
  - nodejs-legacy
  - git
  tags: jupyter-deps

- name: Install Docker and Docker-py
  apt: name={{item}} state=present update_cache=yes
  with_items:
  - docker.io
  - python3-docker
  when: spawner == 'docker'
  tags: jupyter-deps

- name: install npm package configurable-http-proxy
  npm: name=configurable-http-proxy global=yes state=present
  tags: jupyter-deps

####################################
# Configure user/group on system
####################################

- name: add jupyter group
  group: name=jupyter state=present
  tags: jupyter-user

- name: add jupyter user, set encrypted password
  user: name=jupyter state=present password="{{jupyterpw}}"
  tags: jupyter-user

- name: add docker group
  group: name=docker state=present
  when: spawner == 'docker'
  tags: jupyter-user

- name: put jupyter user in docker-related groups
  user: name=jupyter groups=docker,jupyter,shadow
  when: spawner == 'docker'
  tags: jupyter-user

- name: put jupyter user in sudospawner-related groups
  user: name=jupyter groups=jupyter,shadow
  when: spawner == 'sudo'
  tags: jupyter-user


####################################
# Place folder and sudoers config
####################################

- name: create jupyterhub folder in etc
  file: path=/etc/jupyterhub state=directory mode=0755 owner=jupyter group=jupyter
  tags: jupyter-files

- name: copy jupyterhub sudospawner sudo config
  copy: src=sudo_jupyter dest=/etc/sudoers.d/jupyter mode=0440 owner=root group=root
  tags: jupyter-sudospawner
  when: spawner == 'sudo'

####################################
# Pull docker image
####################################
- name: pull Docker image
  docker_image: name="{{docker_image}}"

####################################
# Install jupyter from pip
####################################

- name: install jupyter, jupyterhub via pip3
  pip: executable=pip3 name={{item}} extra_args='--upgrade'
  tags: jupyter-deps
  with_items:
  - jupyter
  - jupyterhub

- name: install sudospawner via pip3
  pip: executable=pip3 name=sudospawner
  tags: jupyter-sudospawner
  when: spawner == 'sudo'

- name: install dockerspawner via pip3
  pip: executable=pip3 name=dockerspawner
  tags: jupyter-dockerspawner
  when: spawner == 'docker'

####################################
# Generate/place config file
####################################

- name: Check to see if config file exists
  stat: path=/etc/jupyterhub/jupyterhub_config.py
  register: config_exists
  tags: jupyter-config

- name: configure jupyterhub
  command: /usr/local/bin/jupyterhub --generate-config chdir=/etc/jupyterhub/ creates=/etc/jupyterhub/jupyterhub_config.py
  when: config_exists.stat.exists == False
  tags: jupyter-config

####################################
# Update config file
####################################

- name: set jupyterhub admin user
  lineinfile: dest=/etc/jupyterhub/jupyterhub_config.py line="c.Authenticator.admin_users = {'jupyter'}"
  tags: jupyter-config

- name: set jupyterhub to create users
  lineinfile: dest=/etc/jupyterhub/jupyterhub_config.py line="c.LocalAuthenticator.create_system_users = True"
  tags: jupyter-config

- name: set hub IP address
  lineinfile: dest=/etc/jupyterhub/jupyterhub_config.py line="c.JupyterHub.hub_ip = '{{ansible_default_ipv4.address}}'"
  tags: jupyter-config

- name: set IP address
  lineinfile: dest=/etc/jupyterhub/jupyterhub_config.py line="c.JupyterHub.ip = '{{ansible_default_ipv4.address}}'"
  tags: jupyter-config

- name: set proxy IP address
  lineinfile: dest=/etc/jupyterhub/jupyterhub_config.py line="c.JupyterHub.proxy_api_ip = '{{ansible_default_ipv4.address}}'"
  tags: jupyter-config

- name: set spawner to sudospawner
  lineinfile:
    path: '/etc/jupyterhub/jupyterhub_config.py'
    regexp: '^c\.JupyterHub\.spawner_class ='
    line: "c.JupyterHub.spawner_class = 'sudospawner.SudoSpawner'"
  tags: jupyter-config, jupyter-sudospawner
  when: spawner == 'sudo'

- name: set spawner to dockerspawner
  lineinfile:
    path: '/etc/jupyterhub/jupyterhub_config.py'
    regexp: '^c\.JupyterHub\.spawner_class ='
    line: "c.JupyterHub.spawner_class = 'dockerspawner.DockerSpawner'"
  tags: jupyter-config, jupyter-dockerspawner
  when: spawner == 'docker'

####################################
# Init script for starting service
####################################

- name: install jupyterhub systemd service
  copy: src=jupyterhub.service dest=/lib/systemd/system/jupyterhub.service mode=755 owner=root group=root
  tags: jupyter-service

- name: Ensure hostname is in /etc/hosts file
  lineinfile: dest=/etc/hosts regexp="{{ansible_hostname}}" line="{{ansible_default_ipv4.address}}  {{ansible_hostname}}"
  tags: jupyter-config

- name: Place SSL private key
  copy: src=../../../files/jupyterhub.key dest=/etc/jupyterhub/server.key
  tags: jupyter-ssl

- name: Place SSL Certificate
  copy: src=../../../files/jupyterhub.crt dest=/etc/jupyterhub/server.crt
  tags: jupyter-ssl

- name: Set SSL Certificate
  lineinfile: dest=/etc/jupyterhub/jupyterhub_config.py line="c.JupyterHub.ssl_cert = '/etc/jupyterhub/server.crt'"
  tags: jupyter-ssl

- name: Set SSL private key
  lineinfile: dest=/etc/jupyterhub/jupyterhub_config.py line="c.JupyterHub.ssl_key = '/etc/jupyterhub/server.key'"
  tags: jupyter-ssl

- name: start jupyterhub systemd service
  systemd: name=jupyterhub enabled=yes state=started
  tags: jupyter-service
